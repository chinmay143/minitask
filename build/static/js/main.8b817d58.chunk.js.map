{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","incrementCount","setState","prevState","count","parseInt","decrementCount","state","onChangeStartingPoint","e","target","value","this","class","className","title","onClick","onChange","Value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAIqBA,E,kDACnB,aAAc,IAAD,8BACX,gBAMFC,eAAiB,WACf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,MAAOC,SAASF,EAAUC,OAAS,OAT1B,EAabE,eAAiB,WACf,EAAKJ,SAAS,CACZE,MAAO,EAAKG,MAAMH,MAAQ,KAfjB,EAmBbI,sBAAwB,SAAAC,GACtB,EAAKP,SAAS,CACZE,MAAQC,SAASI,EAAEC,OAAOC,UAnB5B,EAAKJ,MAAO,CACVH,MAAM,GAHG,E,0CA4Bb,WACE,IAAMA,EAAUQ,KAAKL,MAAfH,MACN,OACE,qBAAKS,MAAM,YAAX,SAEA,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,YAAd,SAA4BV,IAE5B,wBAAQU,UAAU,iBAAiBC,MAAQ,IAAIC,QAAUJ,KAAKN,eAA9D,eACA,uBAAOQ,UAAU,kBAAkBG,SAAUL,KAAKJ,sBAAuBU,MAASN,KAAKL,MAAMH,QAC7F,wBAAQU,UAAU,kBAAkBC,MAAQ,IAAIC,QAASJ,KAAKX,eAA9D,wB,GAvCyBkB,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b817d58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import Button from \"./components/Button\";\nimport \"./App.css\"\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state= {\n      count:0\n    }\n  }\n\n  incrementCount = () => {\n    this.setState(prevState => ({\n      count: parseInt(prevState.count) + 1\n    }))\n  }\n\n  decrementCount = () => {\n    this.setState({\n      count: this.state.count - 1\n    })\n  }\n\n  onChangeStartingPoint = e =>{\n    this.setState({\n      count : parseInt(e.target.value),\n    })\n  }\n\n \n\n\n  render(){\n    let { count } = this.state;\n    return(\n      <div class=\"container\">\n  \n      <div className=\"quantity\">\n        <h2 className=\"realcount\">{ count }</h2>\n        \n        <button className=\"quantity__plus\" title = \"-\" onClick ={this.decrementCount} >-</button>\n        <input className=\"quantity__input\" onChange={this.onChangeStartingPoint} Value = {this.state.count} ></input>\n        <button className=\"quantity__minus\" title = \"+\" onClick={this.incrementCount}>+</button>\n      </div>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}